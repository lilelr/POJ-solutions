1
千万不要用memset函数对二维数组进行初始化
2018年03月01日 17:27:35
阅读数：549
memset函数的初始化只能对一维数组，对于每一行，是连续分配的； 然而对于各行之间，却不是连续非配的，容易出错


2 求最大公约数
int GCD(int a, int b) {
    return b == 0 ? a : GCD(b, a % b);
}


3  求一个数的因数
  double ans = 0;
        for (int i = 2; i <= n; i++) {
            int cnt = 2;// 因数个数，包括1和本身 dp[i] = Ei
            double temp_sum = 0; // E10 = 1/4 * [ (1+E1) + (1+E2) + (1+E5) + (1+E10) ]
            int sqrt_int = (int) (sqrt(i));
            for (int j = 2; j <= sqrt_int; j++) { // 求因数
                if (i % j == 0) {
                    cnt++;
                    temp_sum += dp[j];
                    int quotient = i / j;
                    if (j != quotient) { // 如 25 = 5 * 5 ,5 不能再加一次
                        cnt++;
                        temp_sum += dp[quotient];
                    }
                }
            }
            printf("%d\n", cnt);
            dp[i] = (cnt + (double) temp_sum) / (cnt - 1);
            printf("dp[%d]: %f\n", i, dp[i]);
        }
        ans = dp[n];

4  分子分母为整数时，要得出double ，注意 分母要加double 转换
            diff_day_pro = diff_day_pro * (1 - n / (double) days);


5  打印三位小数
printf("%.3f\n",ans);

6  double tmp;  //求两个三维坐标点之间的距离
 tmp = sqrt(  (v1.x-v2.x)*(v1.x-v2.x) + (v1.y-v2.y)*(v1.y-v2.y) +
                   (v1.z-v2.z)*(v1.z-v2.z) )


7  set 红黑树，默认升序
  set<pair<int,string>> se;
    se.insert({1,"abc"});
    se.insert({2,"abc"});
    se.insert({2,"aba"});
    auto it = se.begin();
    for(;it!=se.end();it++){
        cout<<it->first << " "<<it->second<<endl;
    }

8 遍历回溯

 for(set<pair<int,string>>::iterator it = com_str.begin();it!=com_str.end();it++){
                cur_com = it->first;
                cur_str = it->second;
                if(cur_com > min_com) break;
                for(int i=0;i<P;i++){ // 遍历 P 个位，确保每次只改变一个位（利用回溯，代码 98->105 行）
                    if(cur_str[i] == desire[i]){
                        int temp_com = cur_com;
                        if(cur_str[i] == '0'){ // 从 0 变成 1
                            temp_com -= one[i]; // 减去原来的抱怨值
                            temp_com += zero[i]; // 增加新的抱怨值
                        }else{ // 从1 变成 0
                            temp_com -= zero[i]; // 减去原来的抱怨值
                            temp_com += one[i]; // 增加新的抱怨值
                        }

                        if(min_com > temp_com){
                            cur_str[i] = change(cur_str[i]); //0 ，1 转换 如 1111 变成 0111
                            if(com_str.count(make_pair(temp_com,cur_str)) == 0){
                                min_com = temp_com; // 找出只改变一位后，抱怨值最小的 str
                                pick_str = cur_str;
                            }
                            cur_str[i] = change(cur_str[i]); //0 ，1 还原，回溯 0111 重新变成 1111
                        }
                    }
                }
            }


9
C语言 printf("%02d\n", b);中的%02d是什么意思？
输出两位整数，不足两位的前面加0，比如05，06……

10         int dp[m + 1][n + 1] = {0} 不能这么初始化数组
           M(dp,0);
